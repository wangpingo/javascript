（一）域解析
我们来看一段代码
alert(a);
var a=2;
运行的结果是undefined.在使用var声明变量但未对其加以初始化时，变量声明就会提升至顶部,
这个变量的值就是undefined.
在域解析阶段js解析器会找到关键字var,function,变量等。
这时存入的是一段代码块，即a=function(){console.log(1)}
这一过程叫做函数声明提升。解析器会率先读取函数声明并添加到执行环境中
补充一个函数表达式
console.log（a（））；
var a=function（）｛
return 3；
｝
函数表达式和函数声明在解析器向执行环境中加载数据是不一样的处理。函数表达式必须等到解析器执行到
它所在的代码才会被真正的解释执行。并不会被提升，在执行到函数所在的语句之前，变量a不会保存对函数的引用
在全局作用域中遵循一个简单的自上而下
执行环境及作用域的概念
执行环境定义了变量或函数有权访问的其他数据，决定了它们各自的行为。每个执行环境都有一个与之相关的变量对
象。环境中定义的所有变量和函数都保存在变量对象中。对象变量只在函数执行过程中存在。但是全局变量对象始终存在。
某个执行环境中的所有代码执行完毕后，该环境被销毁，保存在其中的所有变量和函数定义也随之销毁。
每个函数都有自己的执行环境。
（三）作用域链
